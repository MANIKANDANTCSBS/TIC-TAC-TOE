import tkinter as tk
from tkinter import messagebox
import random


root = tk.Tk()
root.title("Tic Tac Toe")

# Game variables
board = [' ' for _ in range(9)]
current_player = "X"
game_over = False

buttons = []
for i in range(9):
    button = tk.Button(root, text=' ', font='normal 20 bold', height=3, width=6, command=lambda i=i: button_click(i))
    button.grid(row=i//3, column=i%3)
    buttons.append(button)



def button_click(index):
    global current_player, game_over

    if game_over or board[index] != ' ':
        return

    board[index] = current_player
    buttons[index].config(text=current_player)

    winner = check_winner(board)
    if winner:
        if winner == 'Tie':
            messagebox.showinfo("Game Over", "It's a tie!")
        else:
            messagebox.showinfo("Game Over", f"{winner} wins!")
        game_over = True
        return

    current_player = 'O' if current_player == 'X' else 'X'
    if current_player == 'O':
        ai_move()


def ai_move():
    global current_player, game_over

    if game_over:
        return

    available_moves = [i for i, x in enumerate(board) if x == ' ']
    if available_moves:
        ai_choice = random.choice(available_moves)
        board[ai_choice] = 'O'
        buttons[ai_choice].config(text='O')

    winner = check_winner(board)
    if winner:
        if winner == 'Tie':
            messagebox.showinfo("Game Over", "It's a tie!")
        else:
            messagebox.showinfo("Game Over", f"{winner} wins!")
        game_over = True
        return

    current_player = 'X'





def check_winner(board):
    winning_combinations = [
        (0, 1, 2), (3, 4, 5), (6, 7, 8),  # Rows
        (0, 3, 6), (1, 4, 7), (2, 5, 8),  # Columns
        (0, 4, 8), (2, 4, 6)  # Diagonals
    ]
    for a, b, c in winning_combinations:
        if board[a] == board[b] == board[c] and board[a] != ' ':
            return board[a]
    if ' ' not in board:
        return 'Tie'
    return None



root.mainloop()
